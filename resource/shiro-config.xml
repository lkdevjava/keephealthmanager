<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/p http://www.springframework.org/schema/util/spring-p-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd ">

	<bean id="loginFilter" class="com.kh.common.shiro.filter.LoginFilter"></bean>
	<bean id="permissionFilter" class="com.kh.common.shiro.filter.PermissionFilter"></bean>
	<bean id="roleFilter" class="com.kh.common.shiro.filter.RoleFilter"></bean>

	<!-- 缓存管理器 -->
    <bean id="cacheManager" class="com.kh.common.shiro.cache.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>
    
	<!-- session id 生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>

	<!-- 生成Cookie信息模板 -->
	<bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的名字 -->
		<constructor-arg value="keephealthmanager" />
		<property name="httpOnly" value="true" />
		<!-- cookie的有效时间 -1永久有效 -->
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 记住我Cookie信息模板 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的名字 -->
		<constructor-arg value="keephealthmanager" />
		<property name="httpOnly" value="true" />
		<!-- cookie的有效时间 -1永久有效 -->
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 管理记住我cookie -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
		<!-- 加密记住我cookie信息 -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('ssXgYTrSoo4q1VvbNZSyIQ==')}" />
	</bean>

	<bean id="loginRealm" class="com.kh.common.shiro.realm.LoginRealm">
		<property name="cachingEnabled" value="false"/>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="realm" ref="loginRealm" />
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="keephealth-activesessioncache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionValidationInterval" value="3600000" />
		<property name="globalSessionTimeout" value="7200000" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookie" ref="simpleCookie" />
		<property name="sessionListeners">
			<list>
				<!-- 可以用第三方redis进行session管理 -->
			</list>
		</property>
	</bean>

	<!-- 定时检查sesssion -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="3600000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<bean id="shiroFilter"
		class="com.kh.common.shiro.filter.KeepHealthShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/index" />
		<property name="successUrl" value="/main" />
		<property name="unauthorizedUrl" value="/unauthorize" />
		<property name="filters">
			<util:map>
				<entry key="login" value-ref="loginFilter" />
				<entry key="permission" value-ref="permissionFilter"></entry>
				<entry key="role" value-ref="roleFilter"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/index = anon
				/role/queryRoleRelPer = login,role,permission
			</value>
		</property>
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<!-- 
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	 -->

</beans>